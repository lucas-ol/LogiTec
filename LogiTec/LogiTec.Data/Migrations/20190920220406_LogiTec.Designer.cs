// <auto-generated />
using System;
using LogiTec.Data.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogiTec.Data.Migrations
{
    [DbContext(typeof(LogiTectContext))]
    [Migration("20190920220406_LogiTec")]
    partial class LogiTec
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogiTec.Entities.Usuario.DadosComplementares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Usuario_Id");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("DadosComplementares");
                });

            modelBuilder.Entity("LogiTec.Entities.Usuario.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("CNH")
                        .HasMaxLength(15);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("Char")
                        .HasMaxLength(2);

                    b.Property<byte[]>("Foto");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Logradouro")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Nacimento")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("RedeSociais")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Telefones")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CNH");

                    b.HasIndex("CPF");

                    b.HasIndex("Email");

                    b.HasIndex("RG");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LogiTec.Entities.Usuario.DadosComplementares", b =>
                {
                    b.HasOne("LogiTec.Entities.Usuario.Usuario", "Usuarios")
                        .WithMany("DadosComplementares")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
